name: auto-update tekrsa_usb parent image

on:
  schedule:
    - cron: "0 0 1 * * "
  workflow_dispatch:
  # push:  # TEMPORARILY DISABLED

env:
  IMAGE_NAME: tekrsa_usb
  REGISTRY: ghcr.io
  V_MAJOR: ${{ secrets.TEKRSA_USB_MAJOR_VERSION }}
  V_MINOR: ${{ secrets.TEKRSA_USB_MINOR_VERSION }}
  V_PATCH: ${{ secrets.TEKRSA_USB_PATCH_VERSION }}

jobs:
  auto_updater:
    runs-on: ubuntu-latest
    steps:

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: $${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for parent image updates
        id: check
        uses: giggio/docker-image-update-checker@v2
        with:
          base-image: ubuntu:20.04
          image: ${{ env.REGISTRY }}/ntia/scos-tekrsa/${{ env.IMAGE_NAME }}:latest
          verbose: true

      - name: Update version number locally
        run: echo "V_PATCH_NEW=$((${{ env.V_PATCH }}+1))" >> $GITHUB_ENV
        if: steps.check.outputs.needs-updating == 'true'

      - name: Build and push updated Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          file: ./docker/Dockerfile
          push: false # TEMPORARILY DISABLED WHILE TROUBLESHOOTING
          tags: |
            ${{ env.REGISTRY }}/ntia/scos-tekrsa/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/ntia/scos-tekrsa/${{ env.IMAGE_NAME }}:${{ env.V_MAJOR }}.${{ env.V_MINOR }}.${{ env.V_PATCH_NEW }}
        if: steps.check.outputs.needs-updating == 'true'

      # TEMPORARILY DISABLED WHILE TROUBLESHOOTING
      # - name: Update version number secret
      #   uses: hmanzur/actions-set-secret@v2.0.0
      #   with:
      #     name: TEKRSA_USB_PATCH_VERSION
      #     value: ${{ env.V_PATCH_NEW }}
      #     token: ${{ secrets.ACTION_TOKEN }}
      #   if: steps.build-and-push.outcome == 'success'
